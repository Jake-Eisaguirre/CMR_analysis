---
title: "n-mix_panama"
format: html
editor: visual
---

## Load Packages

```{r}
#| output: false
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, RPostgres, DBI, unmarked, here, lubridate, kableExtra, GGally, MuMIn, AHMbook, AICcmodavg)

```

## Connect to `survey_data` schema in `ribbitr` database

```{r}
#| output: false
tryCatch({
    drv <- dbDriver("Postgres")
    print("Connecting to Databaseâ€¦")
    connection <- dbConnect(drv,
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"),
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"),
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

#search path
dbExecute(connection, "set search_path to survey_data")

```

## Query Panama n-mix data

```{r}

n_mix_q <- "select l.location, r.region, s.site, v.date, v.survey_time,
s2.transect, s2.detection_type, v2.species_ves, v2.count, v2.life_stage
from location l
join region r on l.location_id = r.location_id 
join site s on r.region_id = s.region_id 
join visit v on s.site_id = v.site_id 
join survey s2 on v.visit_id = s2.visit_id 
join ves v2 on s2.survey_id = v2.survey_id
where l.location = 'panama'
and v2.life_stage = 'adult'
and v.survey_time = 'day';"

nmix_raw_data <- dbGetQuery(connection, n_mix_q) %>% 
  select(!c(region, location, life_stage)) %>%
  #mutate(count = replace_na(count, 1)) %>% 
  arrange(date) 

# t <- nmix_raw_data %>% 
#   group_by(species_capture) %>% 
#   summarise(n = sum(n()))

# find all visits
visit_nmix_q <- "select l.location, r.region, s.site, v.date, v.survey_time, s2.detection_type, s2.observer
                from location l
                join region r on l.location_id = r.location_id
                join site s on r.region_id = s.region_id 
                join visit v on s.site_id = v.site_id 
                join survey s2 on v.visit_id = s2.visit_id
                where l.location = 'panama'
                and s2.detection_type = 'visual'
                and v.survey_time = 'day';"

nmix_raw_visits <-dbGetQuery(connection, visit_nmix_q) %>% 
  arrange(date) %>% 
  select(site, date, survey_time)


# Most common sites where VES was conducted
site_visits <- nmix_raw_visits %>% 
  group_by(site, survey_time) %>% 
  summarize(n = sum(n()))


# silverstoneia_flotator, lithobates_warszewitschii, and colostethus_panamensis most common species
species_count <- nmix_raw_data %>% 
  group_by(species_ves) %>% 
  summarize(n = sum(count))


```

## Populate zeroes

```{r}

spec_filt <- nmix_raw_data %>% 
  filter(species_ves %in% c("silverstoneia_flotator", "lithobates_warszewitschii", 
                            "colostethus_panamensis")) %>% 
  ungroup() %>% 
  filter(!count > 99) %>%  # remove obvious tadpole count
  group_by(date, site, species_ves) %>% 
  summarise(n = sum(count))


# populate site zeros
nmix_clean_up <- nmix_raw_visits %>% 
  left_join(spec_filt) %>%
  complete(nesting(date, site),
           species_ves = unique(spec_filt$species_ves),
           fill = list(n = 0)) %>% 
  drop_na(species_ves) %>% 
  mutate(month = month(date),
         season = if_else(month > 8, "season_2", "season_1"),
         season = if_else(month %in% c(1, 2), "season_2", season),
         site = paste(site, season, sep = "_")) %>% 
  select(!c(month, season))

```

# Season 2

## lithobates_warszewitschii

### Table Formatting - 3 visits

```{r}

washy_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "lithobates_warszewitschii") %>% 
  select(!species_ves) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))


```

### model

```{r}

washy_umf <- unmarkedFramePCount(y = washy_table)

summary(washy_umf)

fm1_washy <- pcount( ~1  ~1, 
               data = washy_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_washy)

backTransform(fm1_washy, "state")
backTransform(fm1_washy, "det")


```


### Table Formatting - 2 visits

```{r}

washy_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "lithobates_warszewitschii") %>% 
  select(!species_ves) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  select(!c(site, year, visit_4, visit_5, visit_3)) %>% 
  filter(!is.na(visit_2))


```

### model

```{r}

washy_umf <- unmarkedFramePCount(y = washy_table)

summary(washy_umf)

fm1_washy <- pcount( ~1  ~1, 
               data = washy_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_washy)

backTransform(fm1_washy, "state")
backTransform(fm1_washy, "det")


```

## colostethus_panamensis

### Table Formatting - 3 visits

```{r}

col_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "colostethus_panamensis") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  select(!species_ves) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))


```

### model

```{r}

col_umf <- unmarkedFramePCount(y = col_table)

summary(col_umf)

fm1_col <- pcount( ~1  ~1, 
               data = col_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_col)

backTransform(fm1_col, "state")
backTransform(fm1_col, "det")

```

### Table Formatting - 2 visits

```{r}

col_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "colostethus_panamensis") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  select(!species_ves) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year, visit_4, visit_5, visit_3)) %>% 
  filter(!is.na(visit_2))


```

### model

```{r}

col_umf <- unmarkedFramePCount(y = col_table)

summary(col_umf)

fm1_col <- pcount( ~1  ~1, 
               data = col_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_col)

backTransform(fm1_col, "state")
backTransform(fm1_col, "det")

```

## silverstoneia_flotator

### Table Formatting - 3 visits

```{r}

flo_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "silverstoneia_flotator") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>%
  select(!species_ves) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))


```

### model

```{r}

flo_umf <- unmarkedFramePCount(y = flo_table)

summary(flo_umf)

fm1_flo <- pcount( ~1  ~1, 
               data = flo_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_flo)

backTransform(fm1_flo, "state")
backTransform(fm1_flo, "det")




```


### Table Formatting - 2 visits

```{r}

flo_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "silverstoneia_flotator") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>%
  select(!species_ves) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year, visit_4, visit_5, visit_3)) %>% 
  filter(!is.na(visit_2))


```

### model

```{r}

flo_umf <- unmarkedFramePCount(y = flo_table)

summary(flo_umf)

fm1_flo <- pcount( ~1  ~1, 
               data = flo_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_flo)

backTransform(fm1_flo, "state")
backTransform(fm1_flo, "det")




```

# Season 1

## lithobates_warszewitschii

### Table Formatting 

```{r}

washy_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "lithobates_warszewitschii") %>% 
  select(!species_ves) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  select(!c(site, year))


```

### model

```{r}

washy_umf <- unmarkedFramePCount(y = washy_table)

summary(washy_umf)

fm1_washy <- pcount( ~1  ~1, 
               data = washy_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_washy)

backTransform(fm1_washy, "state")
backTransform(fm1_washy, "det")


```



## colostethus_panamensis

### Table Formatting

```{r}

col_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "colostethus_panamensis") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  select(!species_ves) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year))


```

### model

```{r}

col_umf <- unmarkedFramePCount(y = col_table)

summary(col_umf)

fm1_col <- pcount( ~1  ~1, 
               data = col_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_col)

backTransform(fm1_col, "state")
backTransform(fm1_col, "det")

```

## silverstoneia_flotator

### Table Formatting

```{r}

flo_table <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species_ves, n) %>% 
  filter(species_ves == "silverstoneia_flotator") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>%
  select(!species_ves) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year))


```

### model

```{r}

flo_umf <- unmarkedFramePCount(y = flo_table)

summary(flo_umf)

fm1_flo <- pcount( ~1  ~1, 
               data = flo_umf, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_flo)

backTransform(fm1_flo, "state")
backTransform(fm1_flo, "det")




```




